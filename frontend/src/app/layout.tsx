import './globals.css'

import type {Metadata} from 'next'
import {Geist, Geist_Mono} from 'next/font/google'
import {Toaster} from '@/components/ui/sonner'
import {client} from '@/client/client.gen'
// import { OpenAPI, client } from "@/client"
import {cookies} from 'next/headers'

import Providers from './providers'

// OpenAPI.BASE = import.meta.env.NEXT_PUBLIC_BACKEND_BASE_URL
// OpenAPI.TOKEN = async () => {
//   return localStorage.getItem("access_token") || ""
// }

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
})

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
})

client.setConfig({
  baseURL: 'http://localhost:8000',
})

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  const cookieStore = await cookies()
  const token = cookieStore.get('access_token')?.value

  client.instance.interceptors.request.use((config) => {
    config.headers.set('Authorization', `Bearer ${token}`)
    return config
  })

  return (
    <html lang='en'>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Providers>
          <main>{children}</main>
        </Providers>
        <Toaster />
      </body>
    </html>
  )
}
